[1mdiff --git a/src/actions/ConnectionHandler.ts b/src/actions/ConnectionHandler.ts[m
[1mindex 54eecb9..40e46c4 100644[m
[1m--- a/src/actions/ConnectionHandler.ts[m
[1m+++ b/src/actions/ConnectionHandler.ts[m
[36m@@ -27,6 +27,7 @@[m [mexport class FTPConnection extends Connection {[m
       status: false,[m
       details: ""[m
     };[m
[32m+[m[32m    console.log("\n\n\nARE WE GETTING A CONFIG?\n\n\n", config)[m
     try {[m
       const client = await connectFTPServer(config);[m
       response.status = client.connected;[m
[36m@@ -46,14 +47,14 @@[m [mexport class FTPConnection extends Connection {[m
     const details = Object.keys(args).reduce((acc: string, k: keyof IIpcConnectionArgs) => {[m
       [m
       const value = (typeof args[k] == 'number') ? args[k].toString() : args[k]; [m
[31m-      const status = ConnectionStore.set(`ftp-details.${k}`, value);[m
[32m+[m[32m      const status = ConnectionStore.setAndValidate(`ftp-details.${k}`, value);[m
       return acc + status ? '' : `\n Can't set ftp-details.${k}, check the store schema`;[m
     }, "");[m
   return {status: true, details}[m
   }[m
 [m
   saveJobStatement(jobStatement: string): IResponse {[m
[31m-    const status = ConnectionStore.set("ftp-details.jobStatement", jobStatement);[m
[32m+[m[32m    const status = ConnectionStore.setAndValidate("ftp-details.jobStatement", jobStatement);[m
     return {status, details: ''};[m
   }[m
 [m
[1mdiff --git a/src/actions/HomeActions.ts b/src/actions/HomeActions.ts[m
[1mindex 5d85d9b..69f388a 100644[m
[1m--- a/src/actions/HomeActions.ts[m
[1m+++ b/src/actions/HomeActions.ts[m
[36m@@ -23,7 +23,7 @@[m [mexport class HomeActions {[m
       //        and check ssh commands are operational to verify it set up correctly.[m
       try {[m
         const { stdout } = await execFile('zowe', ['--version']);[m
[31m-        const status = ConnectionStore.set('zowe-cli-version', stdout);[m
[32m+[m[32m        const status = ConnectionStore.setAndValidate('zowe-cli-version', stdout);[m
         return {status, details: stdout};[m
       } catch (err) {[m
         console.info('Failed to detect Zowe CLI version', err);[m
[1mdiff --git a/src/actions/PlanningActions.ts b/src/actions/PlanningActions.ts[m
[1mindex 216919e..93a4409 100644[m
[1m--- a/src/actions/PlanningActions.ts[m
[1m+++ b/src/actions/PlanningActions.ts[m
[36m@@ -132,8 +132,8 @@[m [mexport class PlanningActions {[m
     });[m
   }[m
 [m
[31m-public static async setConfigByKey(key: string, value: string | Array<string>): Promise<IResponse> {[m
[31m-    const status = ConfigurationStore.setConfigByKey(key, value);[m
[32m+[m[32mpublic static async setConfigByKeyAndValidate(key: string, value: string | Array<string>): Promise<IResponse> {[m
[32m+[m[32m    const status = ConfigurationStore.setConfigByKeyAndValidate(key, value);[m
     return {status, details: ''};[m
   }[m
 [m
[1mdiff --git a/src/main/index.ts b/src/main/index.ts[m
[1mindex a3e2bd5..daac479 100644[m
[1m--- a/src/main/index.ts[m
[1m+++ b/src/main/index.ts[m
[36m@@ -72,6 +72,7 @@[m [mconst createWindow = (): void => {[m
   });[m
 [m
   ipcMain.handle('check-connection', async (_event, args: IIpcConnectionArgs) => {[m
[32m+[m[32m    console.log("\n\n\nARE WE GETTING HERE AT LEAST?\n\n\n")[m
     const res = await connectionActions.checkConnectionData(args);[m
     return res;[m
   });[m
[36m@@ -97,7 +98,7 @@[m [mconst createWindow = (): void => {[m
   });[m
 [m
   ipcMain.handle('set-config-by-key', async (_event, key: string, value) => {[m
[31m-    const res = await PlanningActions.setConfigByKey(key, value);[m
[32m+[m[32m    const res = await PlanningActions.setConfigByKeyAndValidate(key, value);[m
     return res;[m
   });[m
 [m
[1mdiff --git a/src/renderer/components/common/EditorDialog.tsx b/src/renderer/components/common/EditorDialog.tsx[m
[1mindex b263a5c..537507f 100644[m
[1m--- a/src/renderer/components/common/EditorDialog.tsx[m
[1m+++ b/src/renderer/components/common/EditorDialog.tsx[m
[36m@@ -51,7 +51,8 @@[m [mconst EditorDialog = ({contentType, isEditorVisible, toggleEditorVisibility, onC[m
         setEditorContent(test_jcl);[m
       }[m
       if(contentType == 'output') {[m
[31m-        setEditorContent(stringify(setupOutput));[m
[32m+[m[32m        //setEditorContent(EditorStore.getStandardOutput());[m
[32m+[m[32m        // setEditorContent(stringify(setupOutput));[m
       }[m
     }[m
   }, [isEditorVisible])[m
[1mdiff --git a/src/renderer/components/common/Stepper.tsx b/src/renderer/components/common/Stepper.tsx[m
[1mindex 0ccb5d8..ec3ecdd 100644[m
[1m--- a/src/renderer/components/common/Stepper.tsx[m
[1m+++ b/src/renderer/components/common/Stepper.tsx[m
[36m@@ -31,6 +31,7 @@[m [mimport eventDispatcher from '../../../utils/eventDispatcher';[m
 import Warning from '@mui/icons-material/Warning';[m
 import CheckCircle from '@mui/icons-material/CheckCircle';[m
 import Home from '../Home';[m
[32m+[m[32mimport { TYPE_YAML, TYPE_OUTPUT, TYPE_JCL } from '../common/Utils';[m
 [m
 import '../../styles/Stepper.css';[m
 import { StepIcon } from '@mui/material';[m
[36m@@ -57,10 +58,6 @@[m [mexport default function HorizontalLinearStepper({stages, initialization}:{stages[m
     useSelector(selectSecurityStatus),[m
     useSelector(selectCertificateStatus), [m
   ][m
[31m-  [m
[31m-  const TYPE_YAML = "yaml";[m
[31m-  const TYPE_JCL = "jcl";[m
[31m-  const TYPE_OUTPUT = "output";[m
 [m
   const [activeStep, setActiveStep] =  initialization ? useState(0) : useState(useAppSelector(selectActiveStepIndex));[m
   const [activeSubStep, setActiveSubStep] = initialization ? useState(0) : useState(useAppSelector(selectActiveSubStepIndex));[m
[1mdiff --git a/src/renderer/components/common/Utils.tsx b/src/renderer/components/common/Utils.tsx[m
[1mindex 0b9cd3a..8c20edf 100644[m
[1m--- a/src/renderer/components/common/Utils.tsx[m
[1m+++ b/src/renderer/components/common/Utils.tsx[m
[36m@@ -10,4 +10,8 @@[m
 [m
 [m
 // Note: This doesn't gaurantee command did what it was supposed to do, but rather z/OS Unix (and zwe) didn't throw an error[m
[31m-export const JCL_UNIX_SCRIPT_OK = "Script finished.";[m
\ No newline at end of file[m
[32m+[m[32mexport const JCL_UNIX_SCRIPT_OK = "Script finished.";[m
[32m+[m
[32m+[m[32mexport const TYPE_YAML = "yaml";[m
[32m+[m[32mexport const TYPE_JCL = "jcl";[m
[32m+[m[32mexport const TYPE_OUTPUT = "output";[m
\ No newline at end of file[m
[1mdiff --git a/src/renderer/components/stages/Certificates.tsx b/src/renderer/components/stages/Certificates.tsx[m
[1mindex 111420e..a4b9102 100644[m
[1m--- a/src/renderer/components/stages/Certificates.tsx[m
[1m+++ b/src/renderer/components/stages/Certificates.tsx[m
[36m@@ -21,6 +21,7 @@[m [mimport { createTheme } from '@mui/material/styles';[m
 import { stages } from "../configuration-wizard/Wizard";[m
 import { setActiveStep } from "./progress/activeStepSlice";[m
 import { getStageDetails, getSubStageDetails } from "./progress/progressStore";[m
[32m+[m[32mimport { TYPE_YAML, TYPE_OUTPUT, TYPE_JCL } from '../common/Utils';[m
 [m
 const Certificates = () => {[m
 [m
[36m@@ -46,10 +47,6 @@[m [mconst Certificates = () => {[m
 [m
   const section = 'certificate';[m
 [m
[31m-  const TYPE_YAML = "yaml";[m
[31m-  const TYPE_JCL = "jcl";[m
[31m-  const TYPE_OUTPUT = "output";[m
[31m-[m
   const ajv = new Ajv();[m
   ajv.addKeyword("$anchor");[m
   let certificateSchema;[m
[1mdiff --git a/src/renderer/components/stages/InitApfAuth.tsx b/src/renderer/components/stages/InitApfAuth.tsx[m
[1mindex 865bab2..2ef76a4 100644[m
[1m--- a/src/renderer/components/stages/InitApfAuth.tsx[m
[1m+++ b/src/renderer/components/stages/InitApfAuth.tsx[m
[36m@@ -11,7 +11,7 @@[m
 import React, {useEffect, useState} from "react";[m
 import { Box, Button, FormControl, TextField, Typography } from '@mui/material';[m
 import { useAppSelector, useAppDispatch } from '../../hooks';[m
[31m-import { selectYaml, selectOutput, selectSchema, setNextStepEnabled, setLoading, setOutput } from '../configuration-wizard/wizardSlice';[m
[32m+[m[32mimport { selectYaml, selectOutput, selectSchema, setNextStepEnabled } from '../configuration-wizard/wizardSlice';[m
 import { selectConnectionArgs } from './connection/connectionSlice';[m
 import { setApfAuthStatus, setInitializationStatus, selectApfAuthStatus, selectInitializationStatus } from './progress/progressSlice';[m
 import { IResponse } from '../../../types/interfaces';[m
[36m@@ -115,13 +115,15 @@[m [mconst InitApfAuth = () => {[m
 [m
         if (res?.details && res.details[3] && res.details[3].indexOf(JCL_UNIX_SCRIPT_OK) == -1) { // Error during zwe init apfAuth[m
           alertEmitter.emit('showAlert', res.details[3], 'error');[m
[31m-          setEditorContent(res.details['*']);[m
[31m-          setSetupOutput(res.details[3]);[m
[31m-          dispatch(setOutput(res.details[3]));[m
[31m-          setContentType('output');[m
[31m-          toggleEditorVisibility("output")[m
[32m+[m[32m          // setEditorContent(res.details['*']);[m
[32m+[m[32m          // setSetupOutput(res.details[3]);[m
[32m+[m[32m          // dispatch(setOutput(res.details[3]));[m
[32m+[m[32m          // setContentType('output');[m
[32m+[m[32m          // toggleEditorVisibility("output")[m
           // setEditorContent(res.details['*']);[m
           // setContentType('output');[m
[32m+[m[32m          setEditorContent(res.details[3]);[m
[32m+[m[32m          setContentType('output');[m
           toggleProgress(false);[m
           apfAuthProceedActions(false);[m
           stages[STAGE_ID].subStages[SUB_STAGE_ID].isSkipped = true;[m
[1mdiff --git a/src/renderer/components/stages/Planning.tsx b/src/renderer/components/stages/Planning.tsx[m
[1mindex 3761635..2fc9082 100644[m
[1m--- a/src/renderer/components/stages/Planning.tsx[m
[1m+++ b/src/renderer/components/stages/Planning.tsx[m
[36m@@ -505,7 +505,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, runtimeDirectory: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.runtimeDirectory', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.runtimeDirectory', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.runtimeDirectory')[m
                   })[m
                 }}[m
[36m@@ -529,7 +529,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, workspaceDirectory: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.workspaceDirectory', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.workspaceDirectory', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.workspaceDirectory')[m
                   })[m
                 }}[m
[36m@@ -553,7 +553,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, logDirectory: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.logDirectory', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.logDirectory', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.logDirectory')[m
                   })[m
                 }}[m
[36m@@ -577,7 +577,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, extensionDirectory: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.extensionDirectory', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.extensionDirectory', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.extensionDirectory')[m
                   })[m
                 }}[m
[36m@@ -600,7 +600,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, rbacProfileIdentifier: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.rbacProfileIdentifier', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.rbacProfileIdentifier', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.rbacProfileIdentifier')[m
                   })[m
                 }}[m
[36m@@ -625,7 +625,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, job: {...prevYaml.zowe.job, name: e.target.value}}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.job.name', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.job.name', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.job.name')[m
                   })[m
                 }}[m
[36m@@ -648,7 +648,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, job: {...prevYaml.zowe.job, prefix: e.target.value}}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.job.prefix', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.job.prefix', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.job.prefi')[m
                   })[m
                 }}[m
[36m@@ -671,7 +671,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     zowe: {...prevYaml.zowe, cookieIdentifier: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('zowe.cookieIdentifier', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.cookieIdentifier', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.cookieIdentifier')[m
                   })[m
                 }}[m
[36m@@ -694,7 +694,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     java: {...prevYaml.java, home: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('java.home', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('java.home', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.java.home')[m
                   })[m
                 }}[m
[36m@@ -717,7 +717,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                     ...prevYaml,[m
                     node: {...prevYaml.node, home: e.target.value}[m
                   }))[m
[31m-                  window.electron.ipcRenderer.setConfigByKey('node.home', e.target.value).then((res: any) => {[m
[32m+[m[32m                  window.electron.ipcRenderer.setConfigByKeyAndValidate('node.home', e.target.value).then((res: any) => {[m
                     // console.log('updated zowe.node.home')[m
                   })[m
                 }}[m
[36m@@ -758,7 +758,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                           ...prevYaml,[m
                           zOSMF: {...prevYaml.zOSMF, host: e.target.value}[m
                         }))[m
[31m-                        window.electron.ipcRenderer.setConfigByKey('zOSMF.host', e.target.value).then((res: any) => {[m
[32m+[m[32m                        window.electron.ipcRenderer.setConfigByKeyAndValidate('zOSMF.host', e.target.value).then((res: any) => {[m
                           // console.log('updated zowe.zOSMF.host')[m
                         })[m
                       }}[m
[36m@@ -782,7 +782,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                           ...prevYaml,[m
                           zOSMF: {...prevYaml.zOSMF, port: Number( e.target.value)}[m
                         }))[m
[31m-                        window.electron.ipcRenderer.setConfigByKey('zOSMF.port', Number(e.target.value)).then((res: any) => {[m
[32m+[m[32m                        window.electron.ipcRenderer.setConfigByKeyAndValidate('zOSMF.port', Number(e.target.value)).then((res: any) => {[m
                           // console.log('updated zowe.zOSMF.port')[m
                         })[m
                       }}[m
[36m@@ -807,7 +807,7 @@[m [mPlease customize the job statement below to match your system requirements.[m
                           ...prevYaml,[m
                           zOSMF: {...prevYaml.zOSMF, applId: e.target.value}[m
                         }))[m
[31m-                        window.electron.ipcRenderer.setConfigByKey('zOSMF.applId', e.target.value).then((res: any) => {[m
[32m+[m[32m                        window.electron.ipcRenderer.setConfigByKeyAndValidate('zOSMF.applId', e.target.value).then((res: any) => {[m
                           // console.log('updated zowe.zOSMF.applId')[m
                         })[m
                       }}[m
[1mdiff --git a/src/renderer/components/stages/ReviewInstallation.tsx b/src/renderer/components/stages/ReviewInstallation.tsx[m
[1mindex 31f4242..c340937 100644[m
[1m--- a/src/renderer/components/stages/ReviewInstallation.tsx[m
[1m+++ b/src/renderer/components/stages/ReviewInstallation.tsx[m
[36m@@ -26,6 +26,7 @@[m [mimport { selectConnectionStatus } from "./progress/progressSlice";[m
 import { selectInstallationTypeStatus } from "./progress/progressSlice";[m
 import { setNextStepEnabled } from '../configuration-wizard/wizardSlice';[m
 import { getStageDetails, getSubStageDetails } from "./progress/progressStore";[m
[32m+[m[32mimport { TYPE_YAML, TYPE_OUTPUT, TYPE_JCL } from '../common/Utils';[m
 [m
 import '../../styles/ReviewInstallation.css';[m
 [m
[36m@@ -59,10 +60,6 @@[m [mconst ReviewInstallation = () => {[m
     useSelector(selectCertificateStatus), [m
   ];[m
 [m
[31m-  const TYPE_YAML = "yaml";[m
[31m-  const TYPE_JCL = "jcl";[m
[31m-  const TYPE_OUTPUT = "output";[m
[31m-[m
   useEffect(() => {[m
     if(selectConnectionStatus && selectPlanningStatus && selectInstallationTypeStatus && selectInitializationStatus) {[m
       setNextStepEnabled(true);[m
[1mdiff --git a/src/renderer/components/stages/Security.tsx b/src/renderer/components/stages/Security.tsx[m
[1mindex 19512c1..8f5cf2e 100644[m
[1m--- a/src/renderer/components/stages/Security.tsx[m
[1m+++ b/src/renderer/components/stages/Security.tsx[m
[36m@@ -28,6 +28,7 @@[m [mimport progressSlice from "./progress/progressSlice";[m
 import { stages } from "../configuration-wizard/Wizard";[m
 import { setActiveStep } from "./progress/activeStepSlice";[m
 import { getStageDetails, getSubStageDetails } from "./progress/progressStore";[m
[32m+[m[32mimport { TYPE_YAML, TYPE_OUTPUT, TYPE_JCL } from '../common/Utils';[m
 [m
 const Security = () => {[m
   const theme = createTheme();[m
[36m@@ -60,10 +61,7 @@[m [mconst Security = () => {[m
 [m
   const installationArgs = useAppSelector(selectInstallationArgs);[m
   const connectionArgs = useAppSelector(selectConnectionArgs);[m
[31m-  [m
[31m-  const TYPE_YAML = "yaml";[m
[31m-  const TYPE_JCL = "jcl";[m
[31m-  const TYPE_OUTPUT = "output";[m
[32m+[m
 [m
   const ajv = new Ajv();[m
   let securitySchema;[m
[1mdiff --git a/src/renderer/components/stages/installation/Installation.tsx b/src/renderer/components/stages/installation/Installation.tsx[m
[1mindex 7d51a3b..d57f12b 100644[m
[1m--- a/src/renderer/components/stages/installation/Installation.tsx[m
[1m+++ b/src/renderer/components/stages/installation/Installation.tsx[m
[36m@@ -27,6 +27,7 @@[m [mimport { stages } from "../../configuration-wizard/Wizard";[m
 import { bool } from "prop-types";[m
 import { setActiveStep } from "../progress/activeStepSlice";[m
 import { getStageDetails, getSubStageDetails } from "../progress/progressStore"; [m
[32m+[m[32mimport { TYPE_YAML, TYPE_OUTPUT, TYPE_JCL } from '../../common/Utils';[m
 [m
 const Installation = () => {[m
 [m
[36m@@ -68,13 +69,6 @@[m [mconst Installation = () => {[m
   const version = useAppSelector(selectZoweVersion);[m
   let timer: any;[m
 [m
[31m-  const section = 'dataset';[m
[31m-  // const initConfig = getConfiguration(section);[m
[31m-[m
[31m-  const TYPE_YAML = "yaml";[m
[31m-  const TYPE_JCL = "jcl";[m
[31m-  const TYPE_OUTPUT = "output";[m
[31m-[m
   const ajv = new Ajv();[m
   ajv.addKeyword("$anchor");[m
   let datasetSchema;[m
[36m@@ -123,7 +117,7 @@[m [mconst Installation = () => {[m
     // FIXME: runtime dir is hardcoded, fix there and in InstallActions.ts - Unpax and Install functions[m
 [m
     Promise.all([[m
[31m-      window.electron.ipcRenderer.setConfigByKey('zowe.setup.dataset', setupYaml),[m
[32m+[m[32m      window.electron.ipcRenderer.setConfigByKeyAndValidate('zowe.setup.dataset', setupYaml),[m
     ]).then(async () => {[m
       dispatch(setLoading(false));[m
       if(installationType === 'smpe'){[m
[1mdiff --git a/src/renderer/preload.ts b/src/renderer/preload.ts[m
[1mindex 87bcf61..f7298aa 100644[m
[1m--- a/src/renderer/preload.ts[m
[1m+++ b/src/renderer/preload.ts[m
[36m@@ -31,7 +31,7 @@[m [mcontextBridge.exposeInMainWorld('electron', {[m
     setConfig(completeZoweYamlObj: any) {[m
       return ipcRenderer.invoke("set-config", completeZoweYamlObj);[m
     },[m
[31m-    setConfigByKey(key: string, value: any) {[m
[32m+[m[32m    setConfigByKeyAndValidate(key: string, value: any) {[m
       return ipcRenderer.invoke("set-config-by-key", key, value);[m
     },[m
     checkZoweCLI() {[m
[1mdiff --git a/src/storage/ConfigurationStore.ts b/src/storage/ConfigurationStore.ts[m
[1mindex 904047e..7f9c5d7 100644[m
[1m--- a/src/storage/ConfigurationStore.ts[m
[1m+++ b/src/storage/ConfigurationStore.ts[m
[36m@@ -11,49 +11,48 @@[m
 import Store from 'electron-store';[m
 import { DefaultStore } from './DefaultStore';[m
 [m
[31m-const store = new Store({cwd: 'zen-configuration-store'});[m
[31m-[m
[31m-const schemaKey = 'schema'[m
[31m-const configKey = 'config'[m
[31m-const storeDefault = {config: {}, schema: {}};[m
[32m+[m[32mconst STORE_NAME = 'zen-configuration-store';[m
[32m+[m[32mconst KEY_SCHEMA = 'schema'[m
[32m+[m[32mconst KEY_CONFIG = 'config'[m
[32m+[m[32mconst STORE_DEFAULT = {config: {}, schema: {}};[m
 [m
 export class ConfigurationStore extends DefaultStore {[m
[31m-  private static schema: any = {};[m
[31m-  private static config: any = {};[m
[32m+[m
[32m+[m[32m  public static store = new Store({cwd: STORE_NAME});[m
 [m
   public static setSchema(value: any): boolean {[m
[31m-    return this.set(schemaKey, value);[m
[32m+[m[32m    return this.set(KEY_SCHEMA, value);[m
   }[m
 [m
   public static getSchema(): any {[m
[31m-    return this.get(schemaKey);[m
[32m+[m[32m    return this.get(KEY_SCHEMA);[m
   }[m
 [m
   public static setConfig(value: any) {[m
[31m-    return this.set(configKey, value);[m
[32m+[m[32m    return this.set(KEY_CONFIG, value);[m
   }[m
 [m
   public static getConfig(): any {[m
[31m-    return this.get(configKey);[m
[32m+[m[32m    return this.get(KEY_CONFIG);[m
   }[m
 [m
   public static getConfigByKey(key: string): any {[m
[31m-    return this.get(`${configKey}.${key}`);[m
[32m+[m[32m    return this.get(`${KEY_CONFIG}.${key}`);[m
   }[m
 [m
[31m-  public static setConfigByKey(key: string, value: string | Array<string>): boolean {[m
[31m-    if (this.validateWithSchema(key)) {[m
[31m-      return this.set(`${configKey}.${key}`, value);[m
[32m+[m[32m  public static setConfigByKeyAndValidate(key: string, value: string | Array<string>, schema?: any): boolean {[m
[32m+[m[32m    if (!schema) {[m
[32m+[m[32m      schema = this.getSchema();[m
     }[m
[31m-    console.warn(`failed validate against schema ${configKey}.${key}`);[m
[31m-    return false;[m
[32m+[m[32m    let schemaPart: any = schema?.properties;[m
[32m+[m[32m    return this.setAndValidate(key, value, schemaPart);[m
   }[m
 [m
   public static deleteConfigByKey(key: any): void {[m
[31m-    this.delete(`${configKey}.${key}`);[m
[32m+[m[32m    this.delete(`${KEY_CONFIG}.${key}`);[m
   }[m
 [m
   public static deleteAll(): void {[m
[31m-    store.store = storeDefault;[m
[32m+[m[32m    this.store.store = STORE_DEFAULT;[m
   }[m
 }[m
[1mdiff --git a/src/storage/ConnectionStore.ts b/src/storage/ConnectionStore.ts[m
[1mindex f56269c..d15e738 100644[m
[1m--- a/src/storage/ConnectionStore.ts[m
[1m+++ b/src/storage/ConnectionStore.ts[m
[36m@@ -11,7 +11,8 @@[m
 import Store from 'electron-store';[m
 import { DefaultStore } from './DefaultStore';[m
 [m
[31m-const storeSchema = {[m
[32m+[m[32mconst STORE_NAME = 'zen-connection-store';[m
[32m+[m[32mconst STORE_SCHEMA = {[m
   "connection-type": {[m
     "type": "string"[m
   },[m
[36m@@ -67,7 +68,7 @@[m [mconst storeSchema = {[m
   }[m
 } as const;[m
 [m
[31m-const storeDefault = {[m
[32m+[m[32mconst STORE_DEFAULT = {[m
   "connection-type": "ftp",[m
   "zowe-cli-version": "",[m
   "ftp-details": {[m
[36m@@ -89,28 +90,17 @@[m [mconst storeDefault = {[m
   }[m
 };[m
 [m
[31m-const validateWithSchema = (key: string): boolean => {[m
[31m-  const keys = key.split('.');[m
[31m-  let schemaPart: any = storeSchema;[m
[31m-  for (const key of keys) {[m
[31m-      if (!Object.prototype.hasOwnProperty.call(schemaPart, key)) {[m
[31m-          return false;[m
[31m-      }[m
[31m-      schemaPart = schemaPart[key].properties;[m
[31m-  }[m
[31m-  return true;[m
[31m-}[m
[31m-[m
[31m-const store = new Store({cwd: 'zen-connection-store', schema: storeSchema});[m
[31m-store.set({...storeDefault, ...store.store});[m
[31m-[m
 export class ConnectionStore extends DefaultStore {[m
 [m
[31m-  public static set(key: string, value: any): boolean {[m
[31m-    return this.setAndValidate(key, value);[m
[32m+[m[32m  public static store = new Store({cwd: STORE_NAME, schema: STORE_SCHEMA});[m
[32m+[m
[32m+[m[32m  public static setAndValidate(key: string, value: any, schema?: any): boolean {[m
[32m+[m[32m    return super.setAndValidate(key, value, schema || STORE_SCHEMA);[m
   }[m
 [m
   public static deleteAll(): void {[m
[31m-    store.store = storeDefault;[m
[32m+[m[32m    this.store.store = STORE_DEFAULT;[m
   }[m
[32m+[m
 }[m
[41m+[m
[1mdiff --git a/src/storage/DefaultStore.ts b/src/storage/DefaultStore.ts[m
[1mindex 3edfc22..9abe5a3 100644[m
[1m--- a/src/storage/DefaultStore.ts[m
[1m+++ b/src/storage/DefaultStore.ts[m
[36m@@ -10,15 +10,16 @@[m
 [m
 import Store from 'electron-store';[m
 [m
[31m-const store = new Store({cwd: 'zen-configuration-store'});[m
[32m+[m[32mconst STORE_NAME = 'zen-default-store';[m
 [m
 // Note: This class is for other Stores to inherit (this is not a Store for "defaults")[m
 export class DefaultStore {[m
 [m
[31m-  public static validateWithSchema(key: string): boolean {[m
[32m+[m[32m  public static store: any = new Store({cwd: STORE_NAME});[m
[32m+[m
[32m+[m[32m  public static validateWithSchema(key: string, schema: any): boolean {[m
     const keys = key.split('.');[m
[31m-    const schema = store.get('schema') as any;[m
[31m-    let schemaPart: any = schema?.properties;[m
[32m+[m[32m    let schemaPart = schema;[m
     for (const key of keys) {[m
         if (!Object.prototype.hasOwnProperty.call(schemaPart, key)) {[m
             return false;[m
[36m@@ -29,16 +30,16 @@[m [mexport class DefaultStore {[m
   }[m
 [m
   public static get(key: string): any {[m
[31m-    return store.get(key);[m
[32m+[m[32m    return this.store.get(key);[m
   }[m
 [m
   public static getAll(): any {[m
[31m-    return store.store;[m
[32m+[m[32m    return this.store.store;[m
   }[m
 [m
   public static set(key: string, value: any): boolean {[m
     try {[m
[31m-      store.set(key, value);[m
[32m+[m[32m      this.store.set(key, value);[m
       return true;[m
     } catch (err) {[m
       console.warn(`failed to add ${key} error: `, err);[m
[36m@@ -46,8 +47,8 @@[m [mexport class DefaultStore {[m
     }[m
   }[m
 [m
[31m-  public static setAndValidate(key: string, value: any): boolean {[m
[31m-    if (this.validateWithSchema(key)) {[m
[32m+[m[32m  public static setAndValidate(key: string, value: any, schema: any): boolean {[m
[32m+[m[32m    if (this.validateWithSchema(key, schema)) {[m
       return this.set(key, value);[m
     }[m
     console.warn(`failed validate against schema config.${key}`);[m
[36m@@ -55,10 +56,10 @@[m [mexport class DefaultStore {[m
   }[m
 [m
   public static delete(key: any): void {[m
[31m-    store.delete(key);[m
[32m+[m[32m    this.store.delete(key);[m
   }[m
 [m
   public static deleteAll(): void {[m
[31m-    store.clear();[m
[32m+[m[32m    this.store.clear();[m
   }[m
 }[m
[1mdiff --git a/src/storage/EditorStore.ts b/src/storage/EditorStore.ts[m
[1mindex 3cada32..87d6a11 100644[m
[1m--- a/src/storage/EditorStore.ts[m
[1m+++ b/src/storage/EditorStore.ts[m
[36m@@ -21,7 +21,7 @@[m [mconst storeDefault = {[m
   }[m
 };[m
 [m
[31m-const store = new Store({cwd: 'zen-progress-store'});[m
[32m+[m[32mconst store = new Store({cwd: 'zen-editor-store'});[m
 store.set(storeDefault);[m
 [m
 export class EditorStore extends DefaultStore {[m
